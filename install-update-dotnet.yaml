---
- name: Install or Update .NET on Windows
  hosts: windows
  connection: winrm
  tasks:
    - name: Create temp directory if it doesn't exist
      ansible.windows.win_file:
        path: C:\temp
        state: directory

    - name: Remove existing .NET installer if it exists
      ansible.windows.win_file:
        path: C:\temp\dotnet-sdk-installer.exe
        state: absent

    - name: Download .NET SDK installer
      ansible.windows.win_get_url:
        url: https://aka.ms/install-dotnet
        dest: C:\temp\dotnet-sdk-installer.exe

    - name: Check if .NET is in PATH
      ansible.windows.win_command: "where.exe dotnet"
      register: dotnet_path_check
      ignore_errors: yes

    - name: Check .NET version if installed
      ansible.windows.win_command: "dotnet --version"
      register: dotnet_version
      when: dotnet_path_check.rc == 0
      ignore_errors: yes

    - name: Install .NET SDK if not found or update if needed
      ansible.windows.win_powershell:
        script: |
          Start-Process "C:\temp\dotnet-sdk-installer.exe" -ArgumentList "/quiet /norestart /force" -Wait -PassThru
      when: dotnet_path_check.failed or dotnet_version.failed or dotnet_version.rc != 0

    - name: Refresh environment to make dotnet available
      ansible.windows.win_shell: |
        $env:Path += ";C:\Program Files\dotnet"
        [System.Environment]::SetEnvironmentVariable('Path', $env:Path, [System.EnvironmentVariableTarget]::Machine)
      when: dotnet_path_check.failed or dotnet_version.failed or dotnet_version.rc != 0

    - name: Wait for environment refresh (sleep 10 seconds)
      ansible.builtin.pause:
        seconds: 10

    - name: Verify .NET SDK installation
      ansible.windows.win_command: "dotnet --version"
      register: dotnet_verify
      ignore_errors: no

    - name: Debug .NET installation result
      ansible.builtin.debug:
        var: dotnet_verify.stdout
